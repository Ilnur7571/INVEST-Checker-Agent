from db import ExamplesDB
from utils import normalize_text

def seed():
    db = ExamplesDB()

    # 20 качественных историй с оценками
    examples = [
        ("Как пользователь, я хочу зарегистрироваться через электронную почту, чтобы иметь возможность войти позже.", "Отлично: независимая, ценная, тестируемая", 5),
        ("Как пользователь, я хочу сбросить пароль, чтобы восстановить доступ, если забуду его.", "Отлично: маленькая, конкретная", 5),
        ("Как пользователь, я хочу загрузить изображение для профиля, чтобы персонализировать аккаунт.", "Отлично: независимая, ценная", 4),
        ("Как пользователь, я хочу обрезать загруженное изображение профиля, чтобы оно правильно отображалось.", "Отлично: маленькая, тестируемая", 5),
        ("Как пользователь, я хочу видеть список моих прошлых заказов, чтобы отслеживать покупки.", "Хорошо: ценная, оцениваемая", 4),
        ("Как администратор, я хочу просматривать список пользователей с основной информацией, чтобы управлять аудиторией.", "Отлично: независимая, ценная", 5),
        ("Как администратор, я хочу удалять пользователей нарушающих правила, чтобы поддерживать безопасность платформы.", "Отлично: конкретная причина", 5),
        ("Как администратор, я хочу экспортировать данные пользователей в CSV, чтобы анализировать аудиторию.", "Лучше: конкретная цель, оцениваемая", 4),
        ("Как пользователь, я хочу получать email-уведомления о статусе заказа, чтобы быть в курсе без открытия приложения.", "Отлично: конкретный канал", 5),
        ("Как пользователь, я хочу получать push-уведомления о новых акциях, чтобы быстро узнавать о скидках.", "Отлично: конкретный тип уведомлений", 4),
        ("Как пользователь, я хочу искать товары по имени, чтобы быстро находить нужное.", "Хорошо: независимая, тестируемая", 4),
        ("Как пользователь, я хочу фильтровать товары по ценовому диапазону, чтобы найти подходящие по бюджету.", "Отлично: независимая, маленькая", 5),
        ("Как пользователь, я хочу фильтровать товары по категориям, чтобы быстро сузить поиск.", "Отлично: конкретная, тестируемая", 5),
        ("Как пользователь, я хочу сортировать товары по возрастанию или убыванию цены.", "Отлично: маленькая, конкретная", 5),
        ("Как пользователь, я хочу добавлять товары в список пожеланий, чтобы купить их позже.", "Хорошо: ценная, независимая", 4),
        ("Как пользователь, я хочу удалять товары из списка пожеланий.", "Отлично: маленькая, тестируемая", 5),
        ("Как пользователь, я хочу оценивать товары по 5-звездочной системе, чтобы помочь другим покупателям.", "Отлично: измеримая, ценная", 5),
        ("Как пользователь, я хочу сохранять товары в корзине на 7 дней, чтобы завершить покупку позже.", "Отлично: ограниченная по времени, тестируемая", 5),
        ("Как пользователь, я хочу применять промокоды при оформлении заказа, чтобы получить скидку.", "Отлично: конкретная, ценная", 5),
        ("Как пользователь, я хочу оформить возврат товара в течение 14 дней, если он не подошел.", "Отлично: ограниченная по времени, ценная", 5),
    ]

    for query, answer, score in examples:
        norm = normalize_text(query)
        try:
            # Добавляем как качественные истории
            db.add_example(query, norm, answer, is_golden=True, score=score)
            print(f"Добавлено: {query} (оценка: {score})")
        except Exception as e:
            print(f"Ошибка при добавлении: {query} - {e}")

if __name__ == "__main__":
    seed()
