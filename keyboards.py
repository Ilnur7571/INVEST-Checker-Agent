from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from utils import extract_score_from_analysis

def main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –Ω–æ–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –ë–∞–∑–∞ US"""
    keyboard = [
        [InlineKeyboardButton("üîç –ê–Ω–∞–ª–∏–∑ INVEST", callback_data="analyze_invest")],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")],
        [InlineKeyboardButton("üìÅ –ë–∞–∑–∞ US", callback_data="show_database")],
        [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="help")]
    ]
    return InlineKeyboardMarkup(keyboard)


def help_keyboard(previous_state: str = None) -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton("üîç –ù–∞—á–∞—Ç—å –∞–Ω–∞–ª–∏–∑", callback_data="analyze_invest")],
    ]
    if previous_state and previous_state != "main_menu":
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    keyboard.append([InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")])
    return InlineKeyboardMarkup(keyboard)


def navigation_keyboard(previous_state: str = None) -> InlineKeyboardMarkup:
    keyboard = []
    if previous_state and previous_state != "main_menu":
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    keyboard.append([InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")])
    return InlineKeyboardMarkup(keyboard)


def similar_stories_keyboard(similar_stories: list, original_text: str) -> InlineKeyboardMarkup:
    keyboard = []

    for i, item in enumerate(similar_stories[:3]):
        _, _, ratio, _ = item
        keyboard.append([
            InlineKeyboardButton(f"üìö –í–∞—Ä–∏–∞–Ω—Ç {i+1} ({ratio:.0%})", callback_data=f"use_similar_{i}")
        ])

    keyboard.extend([
        [InlineKeyboardButton("‚ú® –£–ª—É—á—à–∏—Ç—å —á–µ—Ä–µ–∑ –ò–ò", callback_data="fix_with_llm")],
        [InlineKeyboardButton("‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç", callback_data="use_own")]
    ])

    keyboard.append([
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")
    ])

    return InlineKeyboardMarkup(keyboard)


def analysis_result_keyboard(show_add_to_db: bool = False, previous_state: str = None,
                           has_improvement_history: bool = False, analysis_text: str = None) -> InlineKeyboardMarkup:
    """
    –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–æ–π –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É
    """
    if previous_state == "main_menu":
        previous_state = None

    keyboard = [
        [InlineKeyboardButton("üöÄ –£–ª—É—á—à–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="improve_story")],
    ]

    # –∫–Ω–æ–ø–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —É–ª—É—á—à–µ–Ω–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è
    if has_improvement_history:
        keyboard.append([InlineKeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —É–ª—É—á—à–µ–Ω–∏–π", callback_data="show_improvement_history")])

    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    keyboard.append([InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç", callback_data="export")])

    # –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É"
    if show_add_to_db and analysis_text:
        score = extract_score_from_analysis(analysis_text)
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–π —Å –æ—Ü–µ–Ω–∫–æ–π 5/6 –∏–ª–∏ 6/6
        if score >= 5:
            keyboard.insert(0, [InlineKeyboardButton("üíæ –î–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É", callback_data="add_to_db")])

    # –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    if previous_state and previous_state != "main_menu":
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    keyboard.append([InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")])

    return InlineKeyboardMarkup(keyboard)


def improved_story_keyboard(previous_state: str = None) -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton("üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—É—é", callback_data="analyze_improved")],
        [InlineKeyboardButton("üîÑ –£–ª—É—á—à–∏—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="improve_again")],
        [InlineKeyboardButton("üì§ –≠–∫—Å–ø–æ—Ä—Ç —É–ª—É—á—à–µ–Ω–Ω–æ–π", callback_data="export_improved")],
    ]

    if previous_state and previous_state != "main_menu":
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    keyboard.append([InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")])

    return InlineKeyboardMarkup(keyboard)


def improvement_history_keyboard(previous_state: str = None) -> InlineKeyboardMarkup:
    keyboard = [
        [InlineKeyboardButton("üîÑ –£–ª—É—á—à–∏—Ç—å –µ—â–µ —Ä–∞–∑", callback_data="improve_again")],
        [InlineKeyboardButton("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é", callback_data="analyze_improved")],
    ]

    if previous_state and previous_state != "main_menu":
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    keyboard.append([InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")])

    return InlineKeyboardMarkup(keyboard)


def export_menu_keyboard(previous_state: str = None) -> InlineKeyboardMarkup:
    keyboard = [
        [
            InlineKeyboardButton("üìÑ TXT", callback_data="export_txt"),
            InlineKeyboardButton("üìä CSV", callback_data="export_csv")
        ],
    ]
    if previous_state and previous_state != "main_menu":
        keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])
    keyboard.append([InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")])

    return InlineKeyboardMarkup(keyboard)


def database_keyboard(page: int = 0, total_pages: int = 1, has_previous: bool = False, has_next: bool = False) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –±–∞–∑–µ –∏—Å—Ç–æ—Ä–∏–π"""
    keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if has_previous:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–µ", callback_data=f"db_page_{page-1}"))
    if has_next:
        nav_buttons.append(InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∏–µ ‚û°Ô∏è", callback_data=f"db_page_{page+1}"))

    if nav_buttons:
        keyboard.append(nav_buttons)

    keyboard.append([
        InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back"),
        InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")
    ])

    return InlineKeyboardMarkup(keyboard)


def database_story_keyboard(story_id: int, current_page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã"""
    keyboard = [
        [InlineKeyboardButton("üìä –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ç—É –∏—Å—Ç–æ—Ä–∏—é", callback_data=f"analyze_db_{story_id}")],
        [InlineKeyboardButton("üöÄ –£–ª—É—á—à–∏—Ç—å —ç—Ç—É –∏—Å—Ç–æ—Ä–∏—é", callback_data=f"improve_db_{story_id}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É", callback_data=f"db_page_{current_page}")],
        [InlineKeyboardButton("üîÑ –í –Ω–∞—á–∞–ª–æ", callback_data="restart")]
    ]
    return InlineKeyboardMarkup(keyboard)
